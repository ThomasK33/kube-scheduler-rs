version: v2beta1
name: kube-scheduler-rs

vars:
  REGISTRY:
    source: env
    default: k3d-default-registry.localhost

images:
  rust-app:
    image: ${REGISTRY}/thomask33/kube-scheduler-rs
    dockerfile: ./Dockerfile

deployments:
  rust-app:
    helm:
      chart:
        name: component-chart
        repo: https://charts.devspace.sh
      values:
        containers:
          - image: ${REGISTRY}/thomask33/kube-scheduler-rs
        # service:
        #   ports:
        #     - port: 3000

dev:
  rust-app:
    # Search for the container that runs this image
    imageSelector: ${REGISTRY}/thomask33/kube-scheduler-rs
    # Replace the container image with this dev-optimized image (allows to skip image building during development)
    # devImage: ghcr.io/loft-sh/devspace-containers/alpine:3
    devImage: mcr.microsoft.com/devcontainers/rust:latest
    # Sync files between the local filesystem and the development container
    sync:
      - path: ./
        uploadExcludeFile: .dockerignore
      - path: "${DEVSPACE_USER_HOME}/.gitconfig:/root/.gitconfig"
        file: true
        disableDownload: true
    workingDir: /app
    command:
      - sh
      - -c
      - "tail -f /dev/null"
    # Inject a lightweight SSH server into the container (so your IDE can connect to the remote dev env)
    ssh:
      enabled: true
      useInclude: true
    # Make the following commands from my local machine available inside the dev container
    proxyCommands:
      - command: devspace
      - command: kubectl
      - command: k9s
      - command: helm
      - gitCredentials: true
    # Forward the following ports to be able access your application via localhost
    # ports:
    #   - port: "3000"
    # Open the following URLs once they return an HTTP status code other than 502 or 503
    # open:
    #   - url: http://localhost:3000
#
# Use the `commands` section to define repeatable dev workflows for this project
# commands:
#   migrate-db:
#     command: |-
#       echo 'This is a cross-platform, shared command that can be used to codify any kind of dev task.'
#       echo 'Anyone using this project can invoke it via "devspace run migrate-db"'

pipelines:
  # This is the pipeline for the main command: `devspace dev` (or `devspace run-pipeline dev`)
  dev:
    run: |-
      create_deployments --all     # 1. Deploy Helm charts and manifests specfied as "deployments"
      start_dev rust-app           # 2. Start dev mode "rust-app" (see "dev" section)

      # Open VSCode as soon as we are done
      code --folder-uri vscode-remote://ssh-remote+rust-app.kube-scheduler-rs.devspace/app

  # You can run this pipeline via `devspace deploy` (or `devspace run-pipeline deploy`)
  deploy:
    run: |-
      build_images --all -t $(git describe --always)    # 1. Build, tag (git commit hash) and push all images (see "images")
      create_deployments --all                          # 2. Deploy Helm charts and manifests specfied as "deployments"
